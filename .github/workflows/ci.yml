on: [ push ]
name: CI
jobs:
  build-lint-fmt-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: ⚡ Cache
        if: ${{ !env.ACT }}
        uses: actions/cache@v3
        with:
          path: |
            ./target/*/*
            ~/.cargo
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}-stable
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
      - name: Install protobuf compiler
        run: sudo apt install -y protobuf-compiler libprotobuf-dev
      - uses: actions-rs/cargo@v1
        name: Run build
        with:
          command: build
      - uses: actions-rs/cargo@v1
        name: Run linter
        with:
          command: clippy
          args: --no-deps -- -D warnings
      - uses: actions-rs/cargo@v1
        name: Run formatter
        with:
          command: fmt
          args: --check
      - uses: actions-rs/cargo@v1
        name: Run test
        with:
          command: test
      - name: Install Cargo Machete
        run: cargo install cargo-machete
      - uses: actions-rs/cargo@v1
        name: Find unused dependencies
        with:
          command: machete          
  # coverage:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: ⚡ Cache
  #       if: ${{ !env.ACT }}
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           ./target/*/*
  #           !./target/debug/deps
  #           ~/.cargo
  #         key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}-nightly
  #     - uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: nightly
  #         override: true
  #         components: rustfmt, clippy
  #     - name: Install protobuf compiler
  #       run: sudo apt install -y protobuf-compiler libprotobuf-dev
  #     - uses: actions-rs/cargo@v1
  #       name: Run tests
  #       with:
  #         command: test
  #       env:
  #         CARGO_INCREMENTAL: '0'
  #         RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
  #         RUSTDOCFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Cpanic=abort -Zpanic_abort_tests'
  #     - uses: actions-rs/grcov@v0.1
  #       name: Generate coverage report
  #     - name: Installing htmlq - to parse coverage report
  #       run: cargo install htmlq
  #     - name: Parse coverage report and print
  #       run: |
  #         LINE_COV=$(cat coverage/index.html | htmlq "body > div > nav.level > div:nth-child(1) > div > p.title > abbr" --text); echo "line_coverage = $LINE_COV"
  #         FUNCTION_COV=$(cat coverage/index.html | htmlq "body > div > nav.level > div:nth-child(2) > div > p.title > abbr" --text); echo "function_coverage = $FUNCTION_COV"
  #         BRANCH_COV=$(cat coverage/index.html | htmlq "body > div > nav.level > div:nth-child(3) > div > p.title > abbr" --text); echo "branch_coverage = $BRANCH_COV"
